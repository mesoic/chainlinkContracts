Notes for creating and working with chainlinked smart contracts (consumer contracts)
for unit testing chainlink node operation 

0: 	Install dependencies

	  sudo pacman install nodejs
	  sudo pacman install npm 
	 
	  Install truffle from AUR:
	  	git clone https://aur.archlinux.org/truffle.git
	 	makepkg
	 	sudo pacman -U truffle-5.0.31-1-any.pkg.tar.xz 

1: 	Unbox smartcontractkit and add chainlink (slow)
	  truffle unbox smartcontractkit/chainlink
	  npm install chainlink --save
	 
	  box-url: https://github.com/smartcontractkit/chainlink/tree/master/evm-box
	 
	 
	  In subl3 - want to exclude node_modules from indexing. Update settings to incldue JSON:
	  : Preferences > Settings   
	 
	 	{
	 		"binary_file_patterns": [
	 		  "*.jpg", "*.jpeg", "*.png", "*.gif", "*.ttf", "*.tga", "*.dds",
	 		  "*.ico", "*.eot", "*.pdf", "*.swf", "*.jar", "*.zip",
	 		  "node_modules/**",
	 		  "bower_components/**"
	 		]
	 	}

2:	Run initial test on truffle localhost blockchain. Note the addition of compiler configuration 
	    in truffle-config.js
	  	
	 	compilers: {
	 	    solc: {
	 	      version: '0.4.24',
	 	    },
	 	},
	 	
	  	npm test
	 	> @chainlink/box@0.6.0 test /home/pertinax/Desktop/chainlinkContracts/chainlinked
	 	> NODE_ENV=test npx truffle test
	 
	 	Note: on firstrun, the compiler version may be downloaded
	 		- Fetching solc version list from solc-bin. Attempt #1
	 		- Downloading compiler. Attempt #2.
	 	

3: 	Run initial tests on ganache. Make sure to update the "cldev" netowrk port to 7545
	 
	 	cldev: {
	      host: '127.0.0.1',
	      port: 7545,
	      network_id: '*',
	    }, 
	  		 
	 	run ganache AppImage:
	    	./ganache-2.3.0-beta.2-linux-x86_64.AppImage
	 	
	 	run migration:
	 		npm run migrate:dev

4: Update truffle-config and package.json file. The package.json file determines the 
	behaviour of npm run (commend). In this case we update our package.json to work with
	our preferred truffle-config.js
	 
	 	"migrate:ganache": "npx truffle migrate --reset --network ganache",
	 	"migrate:ropsten": "npx truffle migrate --network ropsten",
	 	"migrate:mainnet": "npx truffle migrate --network mainnet",
	 
	 	run migration to ganache to test:
	 		npm run migrate:ganache
	 	
	 	run migration to ropsten:
	 		npm run migrate:ropsten
	 
	 	Note: this seemed to be difficult. Eventually got contracts to deploy. Need to be 
	 	careful with truffle-config.js, specifically 
	 		network_id: "*"
	 
	  
	>>> Compiling your contracts...
		===========================
		> Compiling ./contracts/Migrations.sol
		> Compiling ./contracts/MyContract.sol
		> Compiling @chainlink/contracts/src/v0.5/Chainlink.sol
		> Compiling @chainlink/contracts/src/v0.5/ChainlinkClient.sol
		> Compiling @chainlink/contracts/src/v0.5/interfaces/ChainlinkRequestInterface.sol
		> Compiling @chainlink/contracts/src/v0.5/interfaces/ENSInterface.sol
		> Compiling @chainlink/contracts/src/v0.5/interfaces/LinkTokenInterface.sol
		> Compiling @chainlink/contracts/src/v0.5/interfaces/PointerInterface.sol
		> Compiling @chainlink/contracts/src/v0.5/vendor/Buffer.sol
		> Compiling @chainlink/contracts/src/v0.5/vendor/CBOR.sol
		> Compiling @chainlink/contracts/src/v0.5/vendor/ENSResolver.sol
		> Compiling @chainlink/contracts/src/v0.5/vendor/Ownable.sol
		> Compiling @chainlink/contracts/src/v0.5/vendor/SafeMath.sol
		> Artifacts written to /home/pertinax/Desktop/chainlinkContracts/chainlinked/build/contracts
		> Compiled successfully using:
		   - solc: 0.5.0+commit.1d4f565a.Emscripten.clang


	>>>	Starting migrations...
		======================
		> Network name:    'ropsten'
		> Network id:      3
		> Block gas limit: 0x7a121d


		1_initial_migration.js
		======================

		   Replacing 'Migrations'
		   ----------------------
		   > transaction hash:    0x915d67c8b80f8246f39af17a87aa6738be9e7da585ce9eba7d332571a49ba3b7
		   > Blocks: 1            Seconds: 84
		   > contract address:    0xB09F3B3A501DC1CA9178ca4EB026A0c2E0F6CE27
		   > block number:        7428307
		   > block timestamp:     1583015870
		   > account:             0xebb230E499c1cB6883Bf6996576fFe9bd4D42fAc
		   > balance:             4.391196966604257312
		   > gas used:            244636
		   > gas price:           20 gwei
		   > value sent:          0 ETH
		   > total cost:          0.00489272 ETH


		   > Saving migration to chain.
		   > Saving artifacts
		   -------------------------------------
		   > Total cost:          0.00489272 ETH


		2_mycontract_migration.js
		=========================

		   Replacing 'MyContract'
		   ----------------------
		   > transaction hash:    0x30ba7ff62a5e45128fb4aebcea11d6ab2b9976aaa08aaf68742e7fb3e617b4ae
		   > Blocks: 2            Seconds: 8
		   > contract address:    0x59CEfbFDceF07A371301affCCF18E762Ae674126
		   > block number:        7428313
		   > block timestamp:     1583015989
		   > account:             0xebb230E499c1cB6883Bf6996576fFe9bd4D42fAc
		   > balance:             4.358317526604257312
		   > gas used:            1601598
		   > gas price:           20 gwei
		   > value sent:          0 ETH
		   > total cost:          0.03203196 ETH


		   > Saving migration to chain.
		   > Saving artifacts
		   -------------------------------------
		   > Total cost:          0.03203196 ETH


		Summary
		=======
		> Total deployments:   2
		> Final cost:          0.03692468 ETH

5: Now we can test the contracts 
	 	npx truffle exec scripts/fund-contract.js --network ropsten (error)
	 
	 	npx truffle exec scripts/request-data.js --network ropsten
	 		Using network 'ropsten'.
	 
	 		Creating request on contract: 0x59CEfbFDceF07A371301affCCF18E762Ae674126
	 		0x98f13bac307011b94026d0c71b6e9f92fe0940b04ab89a804d4a36ad8ac03a1d
	 
	 	npx truffle exec scripts/read-contract.js --network ropsten
	 		
	 		npx truffle exec scripts/read-contract.js --network ropsten
	 		Using network 'ropsten'.
	 
	 			22316
	 

6: Note that many issues came up when testing functionality. 

	a) With Infura API. Issue - repeared RPC errors. 
	 
	 	Error: Invalid JSON RPC response: undefined
	 
	 	Fix: we redefine provider in truffle.config:
	 
	 		provider: new HDWalletProvider(
	 			config.ROPSTEN_HD_MNEMONIC, 
	 			config.ROPSTEN_EAAS + config.ROPSTEN_API_KEY, 
	 			config.ROPSTEN_HD_INDEX),
	 
	 	as opposed to function(){return new} OR () => {return new}: 
	 		
	 		provider: function() {
          		return new HDWalletProvider(
           		config.ROPSTEN_HD_MNEMONIC, 
          		config.ROPSTEN_EAAS + config.ROPSTEN_API_KEY, 
           		config.ROPSTEN_HD_INDEX)
        	},
     

    b) When updating .config.json, the "live" network was redefined as "ropsten".
    This caused a problem in 2_mycontract_migration.js which does a check for 
    the "live" network.
     
     	Error: deploys LinkToken.sol, oracle.sol, MyContract.sol
     		if (!network.startsWith('live')) 
     	
     	Fix: deploys MyContract.sol and resolves LinkToken addr from clregistry.  
     		if (!network.startsWith('ropsten'))
     

    c) Version errors with v0.4 contracts. Bad requests were found in these contracts. 
    This was resolved by upgrading pragma and import statements in MyContract.sol to 
    point to the v0.5 contracts in the truffle box. 
     
     	Error: v4.0 contracts.
     		
	 		pragma solidity 0.4.24;
	 
	 		import "@chainlink/contracts/src/v0.4/ChainlinkClient.sol";
	 		import "openzeppelin-solidity/contracts/ownership/Ownable.sol";
	 
	 	Fix: v5.0 contracts
	 
	 		pragma solidity >=0.5.0;
	 
	 		import "@chainlink/contracts/src/v0.5/ChainlinkClient.sol";
	 		import "@chainlink/contracts/src/v0.5/vendor/Ownable.sol";
	 	
	 	Do not forget to update truffle-config.sol to point to (and download)
	 	the solidiy 5.0 compiler.	
	 
	 		compilers: {
	 	      solc: {
	 	          version: '0.5.0',
	 	        },
	 	     }
	 

    d) We must fund MyContract.sol with link in order to perform an oracle request. 
    During initial tests, this was done via metamask due to fund-contract.js not 
    working.
     
     	Fails to instantiate token contract despite correct address: 
     		const token = await LinkToken.at(tokenAddress)
  	 
  	
  	e) Note that it is generally not necessary to reset the migration. 
	 
	 	re-deploys everything:
	 		npx truffle migrate --network --reset ropsten
	 
	 	re-deploys updated:
	 		npx truffle migrate --network ropsten

7:  Deployements: Note the contract addresses:
	 
	 	Migrations 		: 0xDd11F7Df86e9956ab78568Df145ae448eA1E3f8f
	 
	 	ethUint256		: 0x513F9E2a060401C64a01Cc4B2Bc2f01718224879
	 	requests 		:
	 		npx truffle exec scripts/ethUint256/request-ethUint256.js --network ropsten
	 		npx truffle exec scripts/ethUint256/read-ethUint256.js --network ropsten
	 
	 	externalAdapter	: 0xb4302F5bFf79fEbe8e75a8fcB1A62C640A798271
	 	requests 		:
	 		npx truffle exec scripts/externalAdapter/request-externalAdapter.js --network ropsten
	 		npx truffle exec scripts/externalAdapter/read-externalAdapter.js --network ropsten
	 
	 	Summary (excluding migrations)
	 	=======
	 	> Total deployments:   2
	 	> Final cost:          0.05702706 ETH
	 